# Example configuration for Black.

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''


# Build system information below.
# NOTE: You don't need this in your own Black configuration.

# [tool.poetry-dynamic-versioning]
# enable = true
# pattern = "(?P<base>\\d\\d\\.\\d\\d?)(?P<stage>[a-zA-Z])(?P<revision>\\d+)"
# dirty = true
# 
# [tool.poetry-dynamic-versioning.substitution]
# files = ["*/_black_version.py"]
# patterns = ["(^version\\s*=\\s*\")[^\"]*\"$"]

[tool.poetry]
name = "black"
version = "19.10b0"
description = "The uncompromising code formatter."
license = "MIT"
authors = ["≈Åukasz Langa <lukasz@langa.pl>"]
maintainers = [
  "Carl Meyer <carl@oddbird.net>",
  "Carol Willing <carolcode@willingconsulting.com>",
  "Jelle Ziljstra <jelle.zijlstra@gmail.com>",
  "Mika Naylor <mail@autophagy.io>",
  "Zsolt Dollenstein <zsol.zsol@gmail.com>",
]
readme = "README.md"
homepage = "https://github.com/psf/black"
documentation = "https://black.readthedocs.io"
classifiers=[
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Quality Assurance",
]
keywords = [
  "automation",
  "formatter",
  "yapf",
  "autopep8",
  "pyfmt",
  "gofmt",
  "rustfmt",
]
packages = [
  {include = "black", from = "src"},
  {include = "blackd", from = "src"},
  {include = "blib2to3", from = "src"},
]
include = [
  "_black_version.py",
  "docs",
  "plugin",
  "profiling",
  ".flake8",
  "mypy.ini",
  "poetry.lock",
  ".pre-commit-config.yaml",
  ".pre-commit-hooks.yaml",
  "CONTRIBUTING.md",
]
# Uncomment this to build with mypyc
# build = "build.py"

[tool.poetry.scripts]
black = "black:patched_main"
blackd = "black:patched_main [d]"

[tool.poetry.extras]
d = ["aiohttp", "aiohttp-cors"]

[tool.poetry.dependencies]
python = "^3.6"
click = ">=6.5"
attrs = ">=18.1.0"
appdirs = "*"
toml = ">=0.9.4"
typed-ast = ">=1.4.0"
regex = "!=2019.12.9"
pathspec = ">=0.6, <1"
dataclasses = {version = ">=0.6", python = "<3.7"}
typing_extensions = ">=3.7.4"
mypy_extensions = ">=0.4.3"

aiohttp = {version = ">=3.3.2", optional = true}
aiohttp-cors = {version = "*", optional = true}

[tool.poetry.dev-dependencies]
pre-commit = "*"
coverage = "*"
docutils = "==0.15"
flake8 = "*"
flake8-bugbear = "*"
flake8-mypy = "*"
mypy = ">=0.740"
readme_renderer = "*"
recommonmark = "*"
Sphinx = "*"
setuptools = ">=39.2.0"
twine = ">=1.11.0"
wheel = ">=0.31.1"
setuptools-scm = "*"
pytest = "^5.3.2"
pytest-cov = "^2.8.1"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
